// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Sitecore.Feature.Metadata.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class CreateMetakeywordsContentFeature : Xunit.IClassFixture<CreateMetakeywordsContentFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Create metakeywords content.feature"
#line hidden
        
        public CreateMetakeywordsContentFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Create metakeywords content", "\tAs an editor \r\n\tI want to easily select meta keywords \r\n\tso that I assure that t" +
                    "he right keywords are used across the site", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(CreateMetakeywordsContentFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Create metakeywords content")]
        [Xunit.TraitAttribute("Description", "Create metakeywords content_UC1_Create new keyword in the Content Editor")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void CreateMetakeywordsContent_UC1_CreateNewKeywordInTheContentEditor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create metakeywords content_UC1_Create new keyword in the Content Editor", new string[] {
                        "NeedImplementation"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("Admin user is logged into Content Editor application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path"});
            table1.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Metadata Keywords"});
#line 10
 testRunner.When("Admin opens following item", ((string)(null)), table1, "When ");
#line 13
 testRunner.And("Admin selects Metakeyword from Insert chunk on the ribbon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("Admin enters <Name> on the Message dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("Admin clicks OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path"});
            table2.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Metadata Keywords"});
#line 16
 testRunner.Then("new item with title <Name> should be added under following item", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Create metakeywords content")]
        [Xunit.TraitAttribute("Description", "Create metakeywords content_UC2_Assign metakeyword to page and check keywords in " +
            "the page HTML")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void CreateMetakeywordsContent_UC2_AssignMetakeywordToPageAndCheckKeywordsInThePageHTML()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create metakeywords content_UC2_Assign metakeyword to page and check keywords in " +
                    "the page HTML", new string[] {
                        "NeedImplementation"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("Admin user is logged into Content Editor application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path",
                        "Field Name"});
            table3.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/About Habitat/Getting Started",
                        "Meta Keywords"});
#line 23
 testRunner.When("Admin opens following item", ((string)(null)), table3, "When ");
#line 26
 testRunner.And("Admin assign <sitecore> keyword", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("Admin saves changes on the item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tag"});
            table4.AddRow(new string[] {
                        "<meta name=\"keywords\" content=\"sitecore\">"});
#line 28
 testRunner.Then("page HTML contains following tag", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Create metakeywords content")]
        [Xunit.TraitAttribute("Description", "Create metakeywords content_UC3_Assign several metakeywords to page and check key" +
            "words in the page HTML")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void CreateMetakeywordsContent_UC3_AssignSeveralMetakeywordsToPageAndCheckKeywordsInThePageHTML()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create metakeywords content_UC3_Assign several metakeywords to page and check key" +
                    "words in the page HTML", new string[] {
                        "NeedImplementation"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.Given("Admin user is logged into Content Editor application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path",
                        "Field Name"});
            table5.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/About Habitat/Getting Started",
                        "Meta Keywords"});
#line 35
 testRunner.When("Admin opens following item", ((string)(null)), table5, "When ");
#line 38
 testRunner.And("Admin assign <sitecore> keyword", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("Admin assign <habitat> keyword", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("Admin saves changes on the item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tag"});
            table6.AddRow(new string[] {
                        "<meta name=\"keywords\" content=\"sitecore, habitat\">"});
#line 41
 testRunner.Then("page HTML contains following tag", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                CreateMetakeywordsContentFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                CreateMetakeywordsContentFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
