<!--
// Copyright 2016 Sitecore Corporation A/S
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
// except in compliance with the License. You may obtain a copy of the License at
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the
// License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied. See the License for the specific language governing permissions
// and limitations under the License.
-->

<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <commerceLogger type="Sitecore.Foundation.CommerceServer.Logging.Logger, Sitecore.Foundation.CommerceServer" singleInstance="true" />
    <commerce.Entities>
      <Price>
        <patch:attribute name="type">Sitecore.Foundation.CommerceServer.Models.ExtendedCommercePrice, Sitecore.Foundation.CommerceServer</patch:attribute>
      </Price>
    </commerce.Entities>

    <commerceServer>
      <types>
        <type name="ICatalogSearchManager"
              type="Sitecore.Foundation.CommerceServer.Managers.CatalogSearchManager, Sitecore.Foundation.CommerceServer"
              lifetime="Singleton">
        </type>
        
        <type name="ISiteContext" type="Sitecore.Foundation.CommerceServer.Infrastructure.Contexts.SiteContext, Sitecore.Foundation.CommerceServer" lifetime="Singleton"/>
        <type name="CommerceStorefront" type="Sitecore.Foundation.CommerceServer.Models.CommerceServerStorefront, Sitecore.Foundation.CommerceServer" lifetime="PerCall"/>
        <type name="CartCacheHelper" type="Sitecore.Foundation.CommerceServer.Helpers.CartCacheHelper, Sitecore.Foundation.CommerceServer" lifetime="Singleton"/>
      </types>
    </commerceServer>

    <pipelines>
      
      <commerce.carts.addShippingInfo>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunTotalPipeline, Sitecore.Commerce.Connect.CommerceServer">
          <patch:attribute name="type">Sitecore.Foundation.CommerceServer.Pipelines.RunTotalPipeline, Sitecore.Foundation.CommerceServer</patch:attribute>
        </processor>
      </commerce.carts.addShippingInfo>
      
      <commerce.carts.removePromoCode patch:source="CommerceServer.Connectors.Carts.config">
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline, Sitecore.Commerce.Connect.CommerceServer">
          <patch:attribute name="type">Sitecore.Foundation.CommerceServer.Pipelines.RunPipeline, Sitecore.Foundation.CommerceServer</patch:attribute>
        </processor>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunTotalPipeline, Sitecore.Commerce.Connect.CommerceServer">
          <patch:attribute name="type">Sitecore.Foundation.CommerceServer.Pipelines.RunTotalPipeline, Sitecore.Foundation.CommerceServer</patch:attribute>
        </processor>
      </commerce.carts.removePromoCode>

      <commerce.carts.addCartLines patch:source="CommerceServer.Connectors.Carts.config">
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline, Sitecore.Commerce.Connect.CommerceServer">
          <patch:attribute name="type">Sitecore.Foundation.CommerceServer.Pipelines.RunPipeline, Sitecore.Foundation.CommerceServer</patch:attribute>
        </processor>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunTotalPipeline, Sitecore.Commerce.Connect.CommerceServer">
          <patch:attribute name="type">Sitecore.Foundation.CommerceServer.Pipelines.RunTotalPipeline, Sitecore.Foundation.CommerceServer</patch:attribute>
        </processor>
      </commerce.carts.addCartLines>

      <commerce.carts.removeCartLines patch:source="CommerceServer.Connectors.Carts.config">
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline, Sitecore.Commerce.Connect.CommerceServer">
          <patch:attribute name="type">Sitecore.Foundation.CommerceServer.Pipelines.RunPipeline, Sitecore.Foundation.CommerceServer</patch:attribute>
        </processor>
      </commerce.carts.removeCartLines>

      <commerce.carts.updateCartLines patch:source="CommerceServer.Connectors.Carts.config">
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline, Sitecore.Commerce.Connect.CommerceServer">
          <patch:attribute name="type">Sitecore.Foundation.CommerceServer.Pipelines.RunPipeline, Sitecore.Foundation.CommerceServer</patch:attribute>
        </processor>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunTotalPipeline, Sitecore.Commerce.Connect.CommerceServer">
          <patch:attribute name="type">Sitecore.Foundation.CommerceServer.Pipelines.RunTotalPipeline, Sitecore.Foundation.CommerceServer</patch:attribute>
        </processor>
      </commerce.carts.updateCartLines>

      <commerce.carts.loadCart patch:source="CommerceServer.Connectors.Carts.config">
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline, Sitecore.Commerce.Connect.CommerceServer">
          <patch:attribute name="type">Sitecore.Foundation.CommerceServer.Pipelines.RunPipeline, Sitecore.Foundation.CommerceServer</patch:attribute>
        </processor>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunTotalPipeline, Sitecore.Commerce.Connect.CommerceServer">
          <patch:attribute name="type">Sitecore.Foundation.CommerceServer.Pipelines.RunTotalPipeline, Sitecore.Foundation.CommerceServer</patch:attribute>
        </processor>
      </commerce.carts.loadCart>

      <commerce.orders.getAvailableCountries>
        <processor type="Sitecore.Foundation.CommerceServer.Pipelines.GetAvailableCountries, Sitecore.Foundation.CommerceServer"/>
      </commerce.orders.getAvailableCountries>

      <commerce.orders.getAvailableRegions>
        <processor type="Sitecore.Foundation.CommerceServer.Pipelines.GetAvailableRegions, Sitecore.Foundation.CommerceServer"/>
      </commerce.orders.getAvailableRegions>
      
      
      <httpRequestBegin>
        <!-- This processor sets the context item to the product that is matched to incoming URL parameters. -->
        <processor type="Sitecore.Foundation.CommerceServer.Pipelines.ProductItemResolver, Sitecore.Foundation.CommerceServer"
                   patch:before="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" />
        <processor type="Sitecore.Foundation.CommerceServer.Pipelines.SecuredPageProcessor, Sitecore.Foundation.CommerceServer"
                   patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" />
      </httpRequestBegin>

      <startTracking>
        <processor patch:before="processor[@type='Sitecore.ExperienceExplorer.Business.Pipelines.StartTracking.JourneyPipeline, Sitecore.ExperienceExplorer.Business']"
                   type="Sitecore.Foundation.CommerceServer.Pipelines.ExcludeUrlTracking, Sitecore.Foundation.CommerceServer"/>
      </startTracking>

      <mvc.renderRendering>
        <processor patch:after="processor[@type='Sitecore.Mvc.Pipelines.Response.RenderRendering.GenerateCacheKey, Sitecore.Mvc']"
                   type="Sitecore.Foundation.CommerceServer.Pipelines.ApplyVaryByUrlPath, Sitecore.Foundation.CommerceServer" />
        <!-- Keep this one last as it appends to the current cache key. -->
        <processor type="Sitecore.Foundation.CommerceServer.Pipelines.VaryByCurrency, Sitecore.Foundation.CommerceServer" />
      </mvc.renderRendering>

      <ensureSessionContext>
        <processor patch:after="processor[@type='Sitecore.Analytics.Pipelines.EnsureSessionContext.CreateContact, Sitecore.Analytics']"
                   type="Sitecore.Foundation.CommerceServer.Pipelines.ResetContact, Sitecore.Foundation.CommerceServer"/>
      </ensureSessionContext>

    </pipelines>

    <linkManager defaultProvider="sitecore">
      <patch:attribute name="defaultProvider">commerce</patch:attribute>
      <providers>
        <add name="commerce"
             includeFriendlyName="true"
             useShopLinks="true"
             includeCatalog="false"
             addAspxExtension="true"
             alwaysIncludeServerUrl="false"
             encodeNames="true"
             languageEmbedding="asNeeded"
             languageLocation="filePath"
             lowercaseUrls="false"
             shortenUrls="true"
             useDisplayName="false"
             type="Sitecore.Foundation.CommerceServer.Pipelines.CatalogLinkProvider, Sitecore.Foundation.CommerceServer"/>
      </providers>
    </linkManager>

  </sitecore>
</configuration>
